sum(death_model_df$confirm_death_mse)
sum(death_model_df$newconfirm_hospital_mse)
sum(death_model_df$newconfirm_icu_mse )
sum(death_model_df$newconfirm_newdeath_mse)
sum(death_model_df$confirm_hospital_mse)
sum(death_model_df$confirm_icu_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$hospital_icu_mse )
sum(death_model_df$hospital_death_mse )
sum(death_model_df$hospital_newdeath_mse )
sum(death_model_df$icu_death_mse)
sum(death_model_df$icu_newdeaths_mse )
#### put ICU to bed
### ICU count does not correlate well with deaths or new deaths
### It is very difficult to predict who will die from ICU numbers
### The MSE's are way off
### MSE is lower in predicting total deaths, but it only increases with time
data.frame(
new_deaths=death_model_df$new_deaths,
icu_new=death_model_df$icu_newdeaths_prediction,
icu_new_mse=death_model_df$icu_newdeaths_mse,
tot_deaths=death_model_df$daily_total_deaths,
icu=death_model_df$icu_death_prediction,
icu_tot_mse=death_model_df$icu_death_mse
)
daily_covid_df
death_model_df
confirm_predict_newdeaths_model_df
confirm_predict_death_model_df
tail(death_model_df)
str(death_model_df)
cor(death_model_df[-1])
### Testing correlation
sort(cor(death_model_df[-1])[,2], decreasing=TRUE)
### Confirmed Correlation
sort(cor(death_model_df[-1])[,3], decreasing=TRUE)
### Confirmed Death Offset Correlation
sort(cor(death_model_df[-1])[,13], decreasing=TRUE)
sum(death_model_df$testing_mse)
sum(death_model_df$confirm_mse)
sum(death_model_df$hospital_mse)
sum(death_model_df$icu_mse)
get_county_models <- function(county_name, input_folder_name) {
filename <- paste0(workingDir,input_folder_name,"\\",county_name,".dat")
return(readRDS(filename) )
}#//*** END county model
offset_lm_15_df <- build_rolling_lm_offset(offset_daily_df,"daily_total_deaths",15)
offset_lm_15_df$mse
tail(offset_lm_15_df)
los_angeles_temp_model_df <- get_county_models("los angeles", "\\models\\confirm_~_deaths")
los_angeles_temp_model_df
#,"\\models\\confirm_~_hospital", "\\models\\confirm_~_icu", "\\models\\hospital_~_icu","\\models\\hospital_~_deaths", "\\models\\icu_~_deaths") )
ca_covid_df[which(ca_covid_df$county=="los angeles"),]
}
confirm_predict_death_county_list <- get_county_models_last_30("\\models\\confirm_~_deaths")
str(confirm_predict_death_county_list)
county_names <- names(confirm_predict_death_county_list)
for (loop_counter in 1:length(county_names)){
if (loop_counter == 1) {
total_error_v <- c()
min_error_v <- c()
max_error_v <-c()
new_cases <- c()
total_cases <- c()
}
loop_county_name <- county_names[loop_counter]
total_error_v <- append(total_error_v,sum(confirm_predict_death_county_list[[loop_county_name]]$predict_mse))
min_error_v <- append(min_error_v,min(confirm_predict_death_county_list[[loop_county_name]]$predict_mse))
max_error_v <- append(max_error_v,max(confirm_predict_death_county_list[[loop_county_name]]$predict_mse))
new_cases <- append(new_cases, confirm_predict_death_county_list[[loop_county_name]]$dependent[30] - confirm_predict_death_county_list[[loop_county_name]]$dependent[1] )
total_cases<- append(total_cases, confirm_predict_death_county_list[[loop_county_name]]$dependent[30] )
if (loop_counter == length(county_names)) {
total_error_by_county_last_30 = data.frame(
county = county_names,
new_cases = new_cases,
percent_new_cases = round( (new_cases / total_cases) * 100,2),
range_error = max_error_v - min_error_v,
total_error = total_error_v
)
}#//*** END last loop element
}#//*** END build county error Loop
total_error_by_county_last_30
mean_percent_new <- mean(total_error_by_county_last_30$percent_new_cases)
sorted_total_error_by_county_last_30 <- total_error_by_county_last_30[which(percent_new_cases > mean_percent_new),]
sorted_total_error_by_county_last_30 <- sorted_total_error_by_county_last_30[with(sorted_total_error_by_county_last_30, order(percent_new_cases ,decreasing = TRUE)), ]
sorted_total_error_by_county_last_30
kern_df <- confirm_predict_death_county_list[["kern"]]
kern_df
mean( kern_df$predict_coefficient )
mean(kern_df$predict_intercept )
sum(death_model_df$testing_death_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$icu_death_mse)
sum(death_model_df$hospital_death_mse)
sum(death_model_df$confirm_newdeath_mse)
sum(death_model_df$newconfirm_newdeath_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$newconfirm_hospital_mse)
sum(death_model_df$newconfirm_icu_mse )
sum(death_model_df$newconfirm_newdeath_mse)
sum(death_model_df$confirm_hospital_mse)
sum(death_model_df$confirm_icu_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$hospital_icu_mse )
sum(death_model_df$hospital_death_mse )
sum(death_model_df$hospital_newdeath_mse )
sum(death_model_df$icu_death_mse)
sum(death_model_df$icu_newdeaths_mse )
#### put ICU to bed
### ICU count does not correlate well with deaths or new deaths
### It is very difficult to predict who will die from ICU numbers
### The MSE's are way off
### MSE is lower in predicting total deaths, but it only increases with time
data.frame(
new_deaths=death_model_df$new_deaths,
icu_new=death_model_df$icu_newdeaths_prediction,
icu_new_mse=death_model_df$icu_newdeaths_mse,
tot_deaths=death_model_df$daily_total_deaths,
icu=death_model_df$icu_death_prediction,
icu_tot_mse=death_model_df$icu_death_mse
)
daily_covid_df
death_model_df
confirm_predict_newdeaths_model_df
confirm_predict_death_model_df
tail(death_model_df)
str(death_model_df)
cor(death_model_df[-1])
### Testing correlation
sort(cor(death_model_df[-1])[,2], decreasing=TRUE)
### Confirmed Correlation
sort(cor(death_model_df[-1])[,3], decreasing=TRUE)
### Confirmed Death Offset Correlation
sort(cor(death_model_df[-1])[,13], decreasing=TRUE)
sum(death_model_df$testing_mse)
sum(death_model_df$confirm_mse)
sum(death_model_df$hospital_mse)
sum(death_model_df$icu_mse)
get_county_models <- function(county_name, input_folder_name) {
filename <- paste0(workingDir,input_folder_name,"\\",county_name,".dat")
return(readRDS(filename) )
}#//*** END county model
offset_lm_15_df <- build_rolling_lm_offset(offset_daily_df,"daily_total_deaths",15)
offset_lm_15_df$mse
tail(offset_lm_15_df)
los_angeles_temp_model_df <- get_county_models("los angeles", "\\models\\confirm_~_deaths")
los_angeles_temp_model_df
ca_covid_df[which(ca_covid_df$county=="los angeles"),]
{
#### Predicted Deaths by Confirmed cases
#death_model_last_row <- death_model_df[nrow(death_model_df),]
#death_model_last_row
#str(death_model_last_row)
#error_rate <- abs( (death_model_last_row$daily_total_deaths - death_model_last_row$confirm_predict) / death_model_last_row$daily_total_deaths ) / 2
#error_rate
#death_statement_confirmed_1 <- paste0("Based on today's California confirmed case count of: ",death_model_last_row$daily_total_confirmed )
#death_statement_confirmed_2 <- paste0(" California is facing: ",
#                                      ( round(
#                                        (death_model_last_row$daily_total_confirmed * death_model_last_row$confirm_death_coefficient) + death_model_last_row$confirm_death_intercept
#                                      )) ," total deaths in ",
#                                      round(death_model_last_row$confirm_death_offset,2)," days +/- < 1%" )
#print(death_statement_confirmed_1)
#print(death_statement_confirmed_2)
confirm_predict_death_county_list <- get_county_models_last_30("\\models\\confirm_~_deaths")
str(confirm_predict_death_county_list)
county_names <- names(confirm_predict_death_county_list)
for (loop_counter in 1:length(county_names)){
if (loop_counter == 1) {
total_error_v <- c()
min_error_v <- c()
max_error_v <-c()
new_cases <- c()
total_cases <- c()
}
loop_county_name <- county_names[loop_counter]
total_error_v <- append(total_error_v,sum(confirm_predict_death_county_list[[loop_county_name]]$predict_mse))
min_error_v <- append(min_error_v,min(confirm_predict_death_county_list[[loop_county_name]]$predict_mse))
max_error_v <- append(max_error_v,max(confirm_predict_death_county_list[[loop_county_name]]$predict_mse))
new_cases <- append(new_cases, confirm_predict_death_county_list[[loop_county_name]]$dependent[30] - confirm_predict_death_county_list[[loop_county_name]]$dependent[1] )
total_cases<- append(total_cases, confirm_predict_death_county_list[[loop_county_name]]$dependent[30] )
if (loop_counter == length(county_names)) {
total_error_by_county_last_30 = data.frame(
county = county_names,
new_cases = new_cases,
percent_new_cases = round( (new_cases / total_cases) * 100,2),
range_error = max_error_v - min_error_v,
total_error = total_error_v
)
}#//*** END last loop element
}#//*** END build county error Loop
total_error_by_county_last_30
mean_percent_new <- mean(total_error_by_county_last_30$percent_new_cases)
sorted_total_error_by_county_last_30 <- total_error_by_county_last_30[which(percent_new_cases > mean_percent_new),]
sorted_total_error_by_county_last_30 <- sorted_total_error_by_county_last_30[with(sorted_total_error_by_county_last_30, order(percent_new_cases ,decreasing = TRUE)), ]
sorted_total_error_by_county_last_30
kern_df <- confirm_predict_death_county_list[["kern"]]
kern_df
mean( kern_df$predict_coefficient )
mean(kern_df$predict_intercept )
#### The best predictor of death is the total number of confirmed
#### testing has 3x more error, and is still fairly applicable
#### Obviously, confirmed is a better predictor of death, since a greater portion
#### of the confirmed will die compared to testing
#### We should spend some time looking at the differences between confirmed and testing
#### Since we are likely to throw away hospital and icu results at least as death indicators
#### Testing is also at a different granularity level, it is statewide
#### So we should avoid testing for scale, or maybe for positivity comparisons.
sum(death_model_df$testing_death_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$icu_death_mse)
sum(death_model_df$hospital_death_mse)
#### New Deaths
#### New deaths are difficult to predict, likely due to variation and scale
#### Maybe my offsets are too small. But there is clearly no direct correlation
#### using the current methods. Maybe take a look at the 30-60 day correlation model
#### for better results, I doubt that less granularity would be more helpful
#### Besides, we can derive daily predictions from total predictions
#### This is likely a dead end.
sum(death_model_df$confirm_newdeath_mse)
sum(death_model_df$newconfirm_newdeath_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$newconfirm_hospital_mse)
sum(death_model_df$newconfirm_icu_mse )
sum(death_model_df$newconfirm_newdeath_mse)
sum(death_model_df$confirm_hospital_mse)
sum(death_model_df$confirm_icu_mse)
sum(death_model_df$confirm_death_mse)
sum(death_model_df$hospital_icu_mse )
sum(death_model_df$hospital_death_mse )
sum(death_model_df$hospital_newdeath_mse )
sum(death_model_df$icu_death_mse)
sum(death_model_df$icu_newdeaths_mse )
#### put ICU to bed
### ICU count does not correlate well with deaths or new deaths
### It is very difficult to predict who will die from ICU numbers
### The MSE's are way off
### MSE is lower in predicting total deaths, but it only increases with time
data.frame(
new_deaths=death_model_df$new_deaths,
icu_new=death_model_df$icu_newdeaths_prediction,
icu_new_mse=death_model_df$icu_newdeaths_mse,
tot_deaths=death_model_df$daily_total_deaths,
icu=death_model_df$icu_death_prediction,
icu_tot_mse=death_model_df$icu_death_mse
)
daily_covid_df
death_model_df
confirm_predict_newdeaths_model_df
confirm_predict_death_model_df
tail(death_model_df)
str(death_model_df)
cor(death_model_df[-1])
### Testing correlation
sort(cor(death_model_df[-1])[,2], decreasing=TRUE)
### Confirmed Correlation
sort(cor(death_model_df[-1])[,3], decreasing=TRUE)
### Confirmed Death Offset Correlation
sort(cor(death_model_df[-1])[,13], decreasing=TRUE)
sum(death_model_df$testing_mse)
sum(death_model_df$confirm_mse)
sum(death_model_df$hospital_mse)
sum(death_model_df$icu_mse)
get_county_models <- function(county_name, input_folder_name) {
filename <- paste0(workingDir,input_folder_name,"\\",county_name,".dat")
return(readRDS(filename) )
}#//*** END county model
offset_lm_15_df <- build_rolling_lm_offset(offset_daily_df,"daily_total_deaths",15)
offset_lm_15_df$mse
tail(offset_lm_15_df)
los_angeles_temp_model_df <- get_county_models("los angeles", "\\models\\confirm_~_deaths")
los_angeles_temp_model_df
#,"\\models\\confirm_~_hospital", "\\models\\confirm_~_icu", "\\models\\hospital_~_icu","\\models\\hospital_~_deaths", "\\models\\icu_~_deaths") )
ca_covid_df[which(ca_covid_df$county=="los angeles"),]
}
### Model Error Rate Comparison
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.865,.925),
legend.direction = "vertical") +
geom_line(data = death_model_df, size=1.5 ,aes(y = confirm_death_mse, x = date, color="Confirmed Predict Death") ) +
geom_line(data = death_model_df, size=1,   aes(y = testing_death_mse, x = date, color="Testing Predict Death" )) +
geom_line(data = death_model_df, size=.5, aes(y = hospital_death_mse, x = date, color="Hospital Predict Death" ),  ) +
geom_line(data = death_model_df, size=.5, aes(y = icu_death_mse,      x = date, color="ICU Predict Death" ) ) +
scale_color_manual(values = c(
"Confirmed Predict Death" = "darkred",
"Testing Predict Death" = "#E17876",
"Hospital Predict Death" = "#2D6A4D",
"ICU Predict Death" = "#59411A"
),name="models") +
labs( x="Date",
y="Relative Model Error (MSE)",
name="Models:",
title="Relative Model Error Rates",
subtitle="Combined County Models (Lower is Better)"  )
### Model Error Rate Comparison
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.865,.925),
legend.direction = "vertical") +
geom_line(data = death_model_df, size=1.5 ,aes(y = confirm_death_mse, x = date, color="Confirmed Predict Death") ) +
geom_line(data = death_model_df, size=1,   aes(y = testing_death_mse, x = date, color="Testing Predict Death" )) +
geom_line(data = death_model_df, size=.5, aes(y = hospital_death_mse, x = date, color="Hospital Predict Death" ),  ) +
geom_line(data = death_model_df, size=.5, aes(y = icu_death_mse,      x = date, color="ICU Predict Death" ) ) +
scale_color_manual(values = c(
"Confirmed Predict Death" = "darkred",
"Testing Predict Death" = "#E17876",
"Hospital Predict Death" = "#2D6A4D",
"ICU Predict Death" = "#59411A"
),name="models") +
labs( x="Date",
y="Relative Model Error (MSE)",
name="Models:",
title="Relative Model Error Rates",
subtitle="Combined County Models (Lower is Better)"  )
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.3,.95),
legend.direction = "horizontal") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
geom_line(data = death_model_df[16:nrow(death_model_df),] , size=1, aes(y = daily_total_confirmed, x = confirm_death_predict, color="Death Prediction Based on Confirmed Cases") ) +
geom_point(data = death_model_df[16:nrow(death_model_df),], size=1,aes(y = daily_total_confirmed, x = daily_total_deaths),color='blue') +
scale_color_manual(values = c(
"Death Prediction Based on Confirmed Cases" = "darkred"
),name="") +
labs( title="California Confirmed Cases vs Deaths",
subtitle="With Regression Prediction (April 18 - August 1)",
y="Total California Confirmed Cases",
x="Total California Covid Deaths"
)
### Model Error Rate Comparison
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.865,.925),
legend.direction = "vertical") +
geom_line(data = death_model_df, size=1.5 ,aes(y = confirm_death_mse, x = date, color="Confirmed Predict Death") ) +
geom_line(data = death_model_df, size=1,   aes(y = testing_death_mse, x = date, color="Testing Predict Death" )) +
geom_line(data = death_model_df, size=.5, aes(y = hospital_death_mse, x = date, color="Hospital Predict Death" ),  ) +
geom_line(data = death_model_df, size=.5, aes(y = icu_death_mse,      x = date, color="ICU Predict Death" ) ) +
scale_color_manual(values = c(
"Confirmed Predict Death" = "darkred",
"Testing Predict Death" = "#E17876",
"Hospital Predict Death" = "#2D6A4D",
"ICU Predict Death" = "#59411A"
),name="models") +
labs( x="Date",
y="Relative Model Error (MSE)",
name="Models:",
title="Relative Model Error Rates",
subtitle="Combined County Models (Lower is Better)"  )
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.3,.95),
legend.direction = "horizontal") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
geom_line(data = death_model_df[16:nrow(death_model_df),] , size=1, aes(y = daily_total_confirmed, x = confirm_death_predict, color="Death Prediction Based on Confirmed Cases") ) +
geom_point(data = death_model_df[16:nrow(death_model_df),], size=1,aes(y = daily_total_confirmed, x = daily_total_deaths),color='blue') +
scale_color_manual(values = c(
"Death Prediction Based on Confirmed Cases" = "darkred"
),name="") +
labs( title="California Confirmed Cases vs Deaths",
subtitle="With Regression Prediction (April 18 - August 1)",
y="Total California Confirmed Cases",
x="Total California Covid Deaths"
)
############################################################
### Last 30 Days
### Confirmed Predicting Deaths vs actual Confirmed/Deaths
############################################################
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.3,.95),
legend.direction = "horizontal") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
geom_line(data = death_model_last_30_df , size=1, aes(y = daily_total_confirmed, x = confirm_death_predict, color="Death Prediction Based on Confirmed Cases") ) +
geom_point(data = death_model_last_30_df, size=1.5,aes(y = daily_total_confirmed, x = daily_total_deaths),color='blue') +
scale_color_manual(values = c(
"Death Prediction Based on Confirmed Cases" = "darkred"
),name="") +
labs( title="California Confirmed Cases vs Deaths",
subtitle="With Regression Prediction (Last 30 Days)",
y="Total California Confirmed Cases",
x="Total California Covid Deaths"
)
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.27,.89),
legend.direction = "vertical") +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
geom_point(data = death_model_last_30_df, size=1.5,aes(y = daily_total_confirmed,   x = daily_total_deaths),color='blue') +
geom_line(data = death_model_last_30_df, size=.5, aes(y = daily_total_confirmed,    x = hospital_death_predict, color="Hospital Predict Death" ),  ) +
geom_line(data = death_model_last_30_df, size=.5, aes(y = daily_total_confirmed,    x = icu_death_prediction, color="ICU Predict Death" ) ) +
geom_line(data = death_model_last_30_df , size=1, aes(y = daily_total_confirmed,  x = confirm_death_predict, color="Death Prediction Based on Confirmed Cases") ) +
geom_line(data = death_model_last_30_df, size=1,   aes(y = daily_total_confirmed,   x = testing_death_predict, color="Testing Predict Death" )) +
scale_color_manual(values = c(
"Death Prediction Based on Confirmed Cases" = "darkred",
"Testing Predict Death" = "#E17876",
"Hospital Predict Death" = "#2D6A4D",
"ICU Predict Death" = "#59411A"
),name=NULL) +
labs( title="California Confirmed Cases vs Deaths",
subtitle="Varous Regression Models (Last 30 Days)",
y="Total California Confirmed Cases",
x="Total California Covid Deaths"
)
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.8,.29),
legend.direction = "vertical") +
geom_line(data = death_model_post_may_df, size=.5,aes(y = confirm_death_offset,   x = date,color='Days: Confirmed to Death')) +
geom_line(data = death_model_post_may_df, size=.5,aes(y = confirm_hospital_offset,   x = date,color='Days: Confirmed to Hospitalization')) +
scale_color_manual(values = c(
"Days: Confirmed to Death" = "darkred",
"Days: Confirmed to Hospitalization" = "#2D6A4D"
),name=NULL) +
labs( title="Correlated Days between Confirmed Cases and Death/Hospitalization",
subtitle=NULL,
y="Correlated Days with outcome",
x=NULL
)
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.15,.15),
legend.direction = "vertical") +
geom_line(data = death_model_last_30_df, size=.5,aes(y = confirm_death_offset,   x = date,color='Days: Confirmed to Death')) +
geom_point(data = death_model_last_30_df, size=1,aes(y = confirm_death_offset,   x = date,color='Days: Confirmed to Death')) +
#geom_line(data = death_model_post_may_df, size=.5,aes(y = confirm_hospital_offset,   x = date,color='Days: Confirmed to Hospitalization')) +
scale_color_manual(values = c(
"Days: Confirmed to Death" = "darkred",
"Days: Confirmed to Hospitalization" = "#2D6A4D"
),name=NULL) +
labs( title="Correlated Days between Confirmed Cases and Death",
subtitle=NULL,
y="Correlated Days with outcome",
x=NULL
)
mean(death_model_last_30_df$tested)
########################################
### MSE
### Confirmed Predicting Deaths
########################################
ggplot() + theme_light() +
theme(
panel.background = element_rect(fill = "lavenderblush"),
legend.position = c(.79,.94),
legend.direction = "vertical") +
geom_line(data = death_model_df ,aes(y = confirm_death_mse, x = date, color="Confirmed Cases Predicting Death") ) +
scale_color_manual(values = c(
"Confirmed Cases Predicting Death" = "darkred"
),name="Model") +
labs( x="Date", y="Model Error (MSE)", name="",
title="Relative California COVID Testing effectiveness", subtitle="Model error as a proxy for effectiveness\n(Lower is Better)"  )
### Last Day test positivity rate
death_model_df[nrow(death_model_df),]$daily_total_confirmed / death_model_df[nrow(death_model_df),]$tested
death_model_df[nrow(death_model_df),]$daily_total_confirmed
death_model_df[nrow(death_model_df),]$tested
### Total tests last 30 days
(death_model_last_30_df$tested[nrow(death_model_last_30_df)] - death_model_last_30_df$tested[1])
### monthly Testing as a total percentage of Californians
( (death_model_last_30_df$tested[nrow(death_model_last_30_df)] - death_model_last_30_df$tested[1])/nrow(death_model_last_30_df) / ca_pop) * 12
last_day_tested <- format(death_model_df[nrow(death_model_df),]$tested,scientific = FALSE)
last_day_tested
##########################################################################################################
##########################################################################################################
### These are for paper only. These results can be tossed if/when we can properly
##########################################################################################################
### These are for paper only. These results can be tossed if/when we can properly
### resassemble the offsets and coeefficients from the county model
##########################################################################################################
### These are for paper only. These results can be tossed if/when we can properly
### resassemble the offsets and coeefficients from the county model
##########################################################################################################
##########################################################################################################
### These are for paper only. These results can be tossed if/when we can properly
### resassemble the offsets and coeefficients from the county model
##########################################################################################################
#  confirm_predict_deaths_df <- build_rolling_lm_offset(offset_daily_df,"daily_total_deaths",15)
##########################################################################################################
### These are for paper only. These results can be tossed if/when we can properly
### resassemble the offsets and coeefficients from the county model
##########################################################################################################
#  confirm_predict_deaths_df <- build_rolling_lm_offset(offset_daily_df,"daily_total_deaths",15)
#  confirm_predict_hospital_df <- build_rolling_lm_offset(offset_daily_df,"hospitalized_covid_patients",15)
#  death_model_state_aggregate_df <- data.frame(
#  death_model_state_aggregate_df <- data.frame(
#    date=confirm_predict_deaths_df$date,
#  death_model_state_aggregate_df <- data.frame(
#    date=confirm_predict_deaths_df$date,
#    daily_total_confirmed = offset_daily_df$daily_total_confirmed,
#  death_model_state_aggregate_df <- data.frame(
#    date=confirm_predict_deaths_df$date,
#    daily_total_confirmed = offset_daily_df$daily_total_confirmed,
#    actual_deaths = offset_daily_df$daily_total_deaths,
#  death_model_state_aggregate_df <- data.frame(
#    date=confirm_predict_deaths_df$date,
#    daily_total_confirmed = offset_daily_df$daily_total_confirmed,
#    actual_deaths = offset_daily_df$daily_total_deaths,
#    confirm_death_predict=confirm_predict_deaths_df$predicted_deaths,
#  death_model_state_aggregate_df <- data.frame(
#    date=confirm_predict_deaths_df$date,
#    daily_total_confirmed = offset_daily_df$daily_total_confirmed,
#    actual_deaths = offset_daily_df$daily_total_deaths,
#    confirm_death_predict=confirm_predict_deaths_df$predicted_deaths,
#    confirm_death_mse=confirm_predict_deaths_df$mse,
